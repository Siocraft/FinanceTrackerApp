name: Code Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'FinanceTrackerApp/package-lock.json'

      - name: Install dependencies
        working-directory: ./FinanceTrackerApp
        run: npm ci

      - name: Check TypeScript
        working-directory: ./FinanceTrackerApp
        run: npx tsc --noEmit --skipLibCheck

      - name: Run ESLint
        working-directory: ./FinanceTrackerApp
        run: npx eslint src/ --ext .ts,.tsx --max-warnings 0

      - name: Check Prettier formatting
        working-directory: ./FinanceTrackerApp
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json}"

      - name: Check for unused dependencies
        working-directory: ./FinanceTrackerApp
        run: npx depcheck --ignore-patterns="build/*,dist/*,.expo/*"

      - name: Check bundle size (if applicable)
        working-directory: ./FinanceTrackerApp
        run: |
          if [ -f "metro.config.js" ]; then
            echo "Metro config found, checking bundle configuration..."
            npx expo export --platform web --clear
          else
            echo "No Metro config found, skipping bundle check"
          fi

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'FinanceTrackerApp/package-lock.json'

      - name: Install dependencies
        working-directory: ./FinanceTrackerApp
        run: npm ci

      - name: Run npm audit
        working-directory: ./FinanceTrackerApp
        run: npm audit --audit-level moderate

      - name: Check for secrets in code
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.before }}
          head: ${{ github.event.after }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'FinanceTrackerApp/package-lock.json'

      - name: Install dependencies
        working-directory: ./FinanceTrackerApp
        run: npm ci

      - name: Run unit tests
        working-directory: ./FinanceTrackerApp
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./FinanceTrackerApp/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'FinanceTrackerApp/package-lock.json'

      - name: Install dependencies
        working-directory: ./FinanceTrackerApp
        run: npm ci

      - name: Check if app builds successfully
        working-directory: ./FinanceTrackerApp
        run: |
          # Check if the app can be built without errors
          npx expo export --platform web --clear --no-minify
          echo "Build check completed successfully"

  api-check:
    name: API Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'FinanceTrackerApp/package-lock.json'

      - name: Install dependencies
        working-directory: ./FinanceTrackerApp
        run: npm ci

      - name: Check API types
        working-directory: ./FinanceTrackerApp
        run: |
          # Check if API types are properly defined
          if [ -f "src/types/financial.ts" ]; then
            echo "Financial types found"
            npx tsc --noEmit src/types/financial.ts
          else
            echo "Warning: Financial types file not found"
            exit 1
          fi

      - name: Check API service
        working-directory: ./FinanceTrackerApp
        run: |
          # Check if API service is properly configured
          if [ -f "src/services/api.ts" ]; then
            echo "API service found"
            npx tsc --noEmit src/services/api.ts
          else
            echo "Warning: API service file not found"
            exit 1
          fi
